## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url = jdbc:mysql://localhost:3306/demo?allowPublicKeyRetrieval=true&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=Asia/Jakarta
spring.datasource.username = root
spring.datasource.password = password

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Hibernate ddl auto (create, create-drop, validate, update)
 spring.jpa.hibernate.ddl-auto = update
# to make it not create tables automatically, you can either turn it off or change it to validate
# validation will make sure the models to be same as the entity, so that when there are
# mismatches, the spring boot app will throw error
#spring.jpa.hibernate.ddl-auto = validate
#spring.jpa.defer-datasource-initialization=true

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=TRACE
spring.flyway.enabled=false

# to connect docker flyway and docker mysql, they need to be in the same namespace
# just get into docker flyway port and execute the port
# as long as 2 docker images are in the same environment, they can communicate to each other

# to test, try to dockerize your existing spring boot application and try to connect to existing
# dockerized mysql
